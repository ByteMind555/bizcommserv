{
  "basePath": "/v1/",
  "swagger": "2.0",
  "info": {
    "description": "This is an Air New Zealand - Technology Platform eXperience(TPX) offering. The platform exposes REST services for communication, supporting channels like Mail, SMS and Chats(user to user & user to group) in the future. Currently it supports only Mail capabilities.",
    "title": "bizcommserv (Business Communication Service)",
    "version": "V1.0",
    "x-publicDocsPath": "communication-capabilities",
    "x-serviceName": "bizcommserv"
  },
  "host": "localhost.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/mails/send": {
      "post": {
        "description": "The endpoint is invoked for sending an Mail to one or more users.",
        "operationId": "email.post",
        "summary": "Send Mail to recipients.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-serviceName": "bizcommserv",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that uniquely authorises the user in the platform."
          },
          {
            "name": "Correlation_Id",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata."
          },
          {
            "name": "async",
            "in": "header",
            "type": "boolean",
            "minLength": 1,
            "description": "If its a large file,client can specify shoult the request be processed async.The service will send a http 202 accepted and processes the request in backend"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to send a Mail message to recipients.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/message_request"
            }
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 200,
          "error_rate": 0.001
        },
        "tags": [
          "Mail Service - Implemented for the demo"
        ],
        "responses": {
          "201": {
            "description": "Successful response. Returns existing mail payload sent to the recipients .",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "202": {
            "description": "Returned if the async header is true, For a long running operation. A handle Id is retruned along with the response. This can be used by the client to poll the info.",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          }
        }
      }
    },
    "/mails/drafts": {
      "post": {
        "description": "The endpoint is invoked for saving an Mail in draft Mode.",
        "operationId": "email.draft",
        "summary": "Save Mails in draft mode.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-serviceName": "bizcommserv",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that uniquely authorises the user in the platform."
          },
          {
            "name": "Correlation_Id",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata."
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to save the message as draft.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/message_request"
            }
          }
        ],
        "x-slo": {
          "response_time_95th_percentile": 200,
          "error_rate": 0.001
        },
        "tags": [
          "Mail Service - Implemented for the demo"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Returns mail draft sent to the recipients.",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "201": {
            "description": "Successful response. New Liquidated Damage created.",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "422": {
            "description": "The requested action could not be performed, semantically incorrect, or failed business validation.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "500": {
            "description": "An internal server error has occurred.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          }
        }
      }
    },
    "/mails/": {
      "get": {
        "summary": "Fetch a list of Mails belonging to the user. There is few filter criteria added to make this API support search capabilities",
        "operationId": "email.get",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-serviceName": "bizcommserv",
        "description": "Fetch list of messages which matches request criteria.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that uniquely authorises the user in the platform.",
            "required": true
          },
          {
            "name": "Correlation_Id",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata."
          },
          {
            "in": "query",
            "name": "mailbox",
            "description": "The Mail mailbox type for fetching. Legal status are SENT, INBOX, DRAFT, OUTBOX.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "subject",
            "description": "Search by subject of the mail. ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "Fetch by Mail Id. Supportes One of more Ids seperated by comma.",
            "type": "string",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page index.",
            "type": "integer",
            "maximum": 500,
            "minimum": 1,
            "default": 1,
            "required": false
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Maximum number of items in the response.",
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "default": 25,
            "required": false
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "Fields to sort by time in descending order.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "in": "query",
            "name": "total_required",
            "description": "Whether total items and pages are required.",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. Returns a list of Mails.",
            "schema": {
              "$ref": "#/definitions/message_search_response"
            }
          },
          "400": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "422": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "500": {
            "description": "Internal server error occured.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          }
        },
        "tags": [
          "Mail Service - Implemented for the demo"
        ],
        "x-slo": {
          "response_time_95th_percentile": 2000,
          "error_rate": 0.001
        }
      }
    },
    "/mails/{id}": {
      "put": {
        "summary": "Update the contents of a mail saved in draft.",
        "operationId": "email.put",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-serviceName": "bizcommserv",
        "description": "Fetch list of messages which matches request criteria.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that uniquely authorises the user in the platform.",
            "required": true
          },
          {
            "name": "Correlation_Id",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata."
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata.",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to save the message as draft.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/message_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. Returns a list of Mails.",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "204": {
            "description": "Successful response. No content."
          },
          "400": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "422": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "500": {
            "description": "Internal server error occured.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          }
        },
        "tags": [
          "Mail Service - unimplemented for the demo"
        ],
        "x-slo": {
          "response_time_95th_percentile": 2000,
          "error_rate": 0.001
        }
      },
      "patch": {
        "summary": "Patch Mail payload for specific element belonging to the user.",
        "operationId": "email.put",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-serviceName": "bizcommserv",
        "description": "Fetch list of messages which matches request criteria.",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that uniquely authorises the user in the platform.",
            "required": true
          },
          {
            "name": "Correlation_Id",
            "in": "header",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata."
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "minLength": 1,
            "description": "An identity object that identifies Applications. This is used to convey application identity metadata.",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to save the message as draft.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "op": {
                    "type": "string",
                    "description": "Operation to perform (e.g., 'replace')."
                  },
                  "path": {
                    "type": "string",
                    "description": "JSON path where the update should occur."
                  },
                  "value": {
                    "type": "string",
                    "description": "New value to replace the existing value."
                  }
                },
                "required": ["op", "path", "value"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. Returns a list of Mails.",
            "schema": {
              "$ref": "#/definitions/message_response"
            }
          },
          "204": {
            "description": "Successful response. No content."
          },
          "400": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "422": {
            "description": "Bad request, some invalid filter criteria passed.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "403": {
            "description": "Authorization failed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          },
          "500": {
            "description": "Internal server error occured.",
            "schema": {
              "$ref": "#/definitions/error_detail"
            }
          }
        },
        "tags": [
          "Mail Service - unimplemented for the demo"
        ],
        "x-slo": {
          "response_time_95th_percentile": 2000,
          "error_rate": 0.001
        }
      }
    }
  },
  "definitions": {
    "recipient_detail": {
      "type": "object",
      "title": "recipient_detail",
      "description": "The list of to,cc,bcc mail Ids that needs to be added",
      "required": [
        "recipient_to"
      ],
      "properties": {
        "recipient_to": {
          "description": "The 'to' list of Mail Ids to which the Mail need to be sent.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/email_address"
          }
        },
        "recipient_cc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/email_address"
          }
        },
        "recipient_bcc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/email_address"
          }
        }
      }
    },
    "message_search_response": {
      "type": "object",
      "title": "message_search_response",
      "description": "Mail message payload",
      "required": [
        "message_id"
      ],
      "properties": {
        "messages": {
          "description": "The list of Mails that is returned.",
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/message_response"
          }
        }
      }
    },
    "error_detail": {
      "description": "The Error Payload.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "content_mime": {
      "type": "string",
      "description": "Type of Content",
      "minLength": 1,
      "maxLength": 256,
      "x-enum": [
        {
          "value": "TEXT",
          "description": "The Mail message containing TEXT."
        },
        {
          "value": "PNG",
          "description": "The Mail message containing PNG."
        },
        {
          "value": "ZIP",
          "description": "The Mail message containing ZIP."
        },
        {
          "value": "XLS",
          "description": "The Mail message containing XLS."
        },
        {
          "value": "OTHERS",
          "description": "The Mail message containing UNKNOWN."
        }
      ]
    },
    "message_status": {
      "type": "string",
      "description": "Status of the message",
      "minLength": 1,
      "maxLength": 256,
      "x-enum": [
        {
          "value": "DRAFT",
          "description": "The Mail message is in saved to be sent for later."
        },
        {
          "value": "SENT",
          "description": "The Mail message is successfully sent."
        },
        {
          "value": "INBOX",
          "description": "The Mail message received successfully and is in user mailbox."
        },
        {
          "value": "DRAFT",
          "description": "The Mail is sent by the user but waiting in outbox due to technical reason."
        }
      ]
    },
    "message_response": {
      "type": "object",
      "title": "message_response",
      "description": "Mail message payload",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "The GUUID generated for the message.",
          "type": "string",
          "minItems": 1,
          "maxItems": 36
        },
        "mail_location": {
          "description": "If the Mail is in one of the following states. Ex: INBOX, DRAFT, SENT and OUTBOX",
          "$ref": "#/definitions/message_status"
        },
        "content": {
          "$ref": "#/definitions/message_request"
        }
      }
    },
    "message_content": {
      "type": "object",
      "description": "The body the Mail",
      "title": "message_content",
      "properties": {
        "content_type": {
          "$ref": "#/definitions/content_mime",
          "type": "string",
          "minLength": 1
        },
        "content_details": {
          "type": "object"
        }
      }
    },
    "message": {
      "type": "object",
      "description": "The body the Mail",
      "title": "message",
      "properties": {
        "subject": {
          "type": "string",
          "minLength": 1
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/message_content"
          }
        }
      }
    },
    "email_address": {
      "type": "object",
      "title": "email_address",
      "description": "Mail identifier and the name of the mail box owner.",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "The Mail Id of the mail box owner.",
          "type": "string"
        },
        "name": {
          "description": "The name of the mail box owner.",
          "type": "string"
        }
      }
    },
    "message_request": {
      "type": "object",
      "title": "message_request",
      "description": "Mail message payload",
      "required": [
        "recipient_details"
      ],
      "properties": {
        "message_from": {
          "description": "The list of Mail Ids to which the Mail need to be sent.",
          "type": "object",
          "$ref": "#/definitions/email_address"
        },
        "message_recipient": {
          "description": "The list of recipient ids to which the Mail need to be sent.",
          "$ref": "#/definitions/recipient_detail"
        },
        "message_body": {
          "description": "The list of Mail Ids to which the Mail need to be sent.",
          "type": "object",
          "$ref": "#/definitions/message"
        }
      }
    }
  }
}